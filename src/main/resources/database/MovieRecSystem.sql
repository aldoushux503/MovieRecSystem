-- MySQL Script generated by MySQL Workbench
-- Fri Feb 28 16:32:42 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema MovieRecSystem
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `MovieRecSystem` ;

-- -----------------------------------------------------
-- Schema MovieRecSystem
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `MovieRecSystem` DEFAULT CHARACTER SET utf8 ;
USE `MovieRecSystem` ;

-- -----------------------------------------------------
-- Table `MovieRecSystem`.`table1`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MovieRecSystem`.`table1` ;

CREATE TABLE IF NOT EXISTS `MovieRecSystem`.`table1` (
)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MovieRecSystem`.`Movie`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MovieRecSystem`.`Movie` ;

CREATE TABLE IF NOT EXISTS `MovieRecSystem`.`Movie` (
  `movie_id` BIGINT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(225) NOT NULL,
  `duration` INT NOT NULL,
  `average_rating` DECIMAL(3,2) NULL DEFAULT 0.00,
  PRIMARY KEY (`movie_id`),
  UNIQUE INDEX `movie_id_UNIQUE` (`movie_id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MovieRecSystem`.`Person`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MovieRecSystem`.`Person` ;

CREATE TABLE IF NOT EXISTS `MovieRecSystem`.`Person` (
  `person_id` BIGINT NOT NULL AUTO_INCREMENT,
  `full_name` VARCHAR(100) NOT NULL,
  `gender` VARCHAR(20) NULL,
  PRIMARY KEY (`person_id`),
  UNIQUE INDEX `person_id_UNIQUE` (`person_id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MovieRecSystem`.`User`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MovieRecSystem`.`User` ;

CREATE TABLE IF NOT EXISTS `MovieRecSystem`.`User` (
  `user_id` BIGINT NOT NULL,
  `username` VARCHAR(45) NOT NULL,
  `email` VARCHAR(100) NOT NULL,
  UNIQUE INDEX `username_UNIQUE` (`username` ASC) VISIBLE,
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE,
  PRIMARY KEY (`user_id`),
  CONSTRAINT `fk_User_Person1`
    FOREIGN KEY (`user_id`)
    REFERENCES `MovieRecSystem`.`Person` (`person_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MovieRecSystem`.`Genre`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MovieRecSystem`.`Genre` ;

CREATE TABLE IF NOT EXISTS `MovieRecSystem`.`Genre` (
  `genre_id` BIGINT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`genre_id`),
  UNIQUE INDEX `genre_id_UNIQUE` (`genre_id` ASC) VISIBLE,
  UNIQUE INDEX `genre_name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MovieRecSystem`.`MovieGenres`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MovieRecSystem`.`MovieGenres` ;

CREATE TABLE IF NOT EXISTS `MovieRecSystem`.`MovieGenres` (
  `movie_id` BIGINT NOT NULL,
  `genre_id` BIGINT NOT NULL,
  PRIMARY KEY (`movie_id`, `genre_id`),
  INDEX `fk_Movie_has_Genre_Genre1_idx` (`genre_id` ASC) VISIBLE,
  INDEX `fk_Movie_has_Genre_Movie_idx` (`movie_id` ASC) VISIBLE,
  CONSTRAINT `fk_Movie_has_Genre_Movie`
    FOREIGN KEY (`movie_id`)
    REFERENCES `MovieRecSystem`.`Movie` (`movie_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Movie_has_Genre_Genre1`
    FOREIGN KEY (`genre_id`)
    REFERENCES `MovieRecSystem`.`Genre` (`genre_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MovieRecSystem`.`PersonRole`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MovieRecSystem`.`PersonRole` ;

CREATE TABLE IF NOT EXISTS `MovieRecSystem`.`PersonRole` (
  `person_role_id` INT NOT NULL,
  `role_name` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`person_role_id`),
  UNIQUE INDEX `role_name_UNIQUE` (`role_name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MovieRecSystem`.`ContentContributors`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MovieRecSystem`.`ContentContributors` ;

CREATE TABLE IF NOT EXISTS `MovieRecSystem`.`ContentContributors` (
  `movie_id` BIGINT NOT NULL,
  `person_id` BIGINT NOT NULL,
  `PersonRole_person_role_id` INT NOT NULL,
  PRIMARY KEY (`movie_id`, `person_id`, `PersonRole_person_role_id`),
  INDEX `fk_ContentContributors_Person1_idx` (`person_id` ASC) VISIBLE,
  INDEX `fk_ContentContributors_PersonRole1_idx` (`PersonRole_person_role_id` ASC) VISIBLE,
  CONSTRAINT `fk_ContentContributors_Movie1`
    FOREIGN KEY (`movie_id`)
    REFERENCES `MovieRecSystem`.`Movie` (`movie_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_ContentContributors_Person1`
    FOREIGN KEY (`person_id`)
    REFERENCES `MovieRecSystem`.`Person` (`person_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_ContentContributors_PersonRole1`
    FOREIGN KEY (`PersonRole_person_role_id`)
    REFERENCES `MovieRecSystem`.`PersonRole` (`person_role_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MovieRecSystem`.`ViewingHistory`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MovieRecSystem`.`ViewingHistory` ;

CREATE TABLE IF NOT EXISTS `MovieRecSystem`.`ViewingHistory` (
  `movie_id` BIGINT NOT NULL,
  `user_id` BIGINT NOT NULL,
  `watch_date` TIMESTAMP NULL,
  PRIMARY KEY (`movie_id`, `user_id`),
  INDEX `fk_Movie_has_User_User1_idx` (`user_id` ASC) VISIBLE,
  INDEX `fk_Movie_has_User_Movie1_idx` (`movie_id` ASC) VISIBLE,
  CONSTRAINT `fk_Movie_has_User_Movie1`
    FOREIGN KEY (`movie_id`)
    REFERENCES `MovieRecSystem`.`Movie` (`movie_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Movie_has_User_User1`
    FOREIGN KEY (`user_id`)
    REFERENCES `MovieRecSystem`.`User` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MovieRecSystem`.`UserRating`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MovieRecSystem`.`UserRating` ;

CREATE TABLE IF NOT EXISTS `MovieRecSystem`.`UserRating` (
  `movie_id` BIGINT NOT NULL,
  `user_id` BIGINT NOT NULL,
  `rating_value` DECIMAL(3,2) NOT NULL,
  PRIMARY KEY (`movie_id`, `user_id`),
  INDEX `fk_Movie_has_User_User2_idx` (`user_id` ASC) VISIBLE,
  INDEX `fk_Movie_has_User_Movie2_idx` (`movie_id` ASC) VISIBLE,
  CONSTRAINT `fk_Movie_has_User_Movie2`
    FOREIGN KEY (`movie_id`)
    REFERENCES `MovieRecSystem`.`Movie` (`movie_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Movie_has_User_User2`
    FOREIGN KEY (`user_id`)
    REFERENCES `MovieRecSystem`.`User` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MovieRecSystem`.`Interaction`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MovieRecSystem`.`Interaction` ;

CREATE TABLE IF NOT EXISTS `MovieRecSystem`.`Interaction` (
  `interactions_id` BIGINT NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`interactions_id`),
  UNIQUE INDEX `role_name_UNIQUE` (`type` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MovieRecSystem`.`UserInteractions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MovieRecSystem`.`UserInteractions` ;

CREATE TABLE IF NOT EXISTS `MovieRecSystem`.`UserInteractions` (
  `Movie_movie_id` BIGINT NOT NULL,
  `User_user_id` BIGINT NOT NULL,
  `interactions_id` BIGINT NOT NULL,
  PRIMARY KEY (`Movie_movie_id`, `User_user_id`, `interactions_id`),
  INDEX `fk_Movie_has_User_User3_idx` (`User_user_id` ASC) VISIBLE,
  INDEX `fk_Movie_has_User_Movie3_idx` (`Movie_movie_id` ASC) VISIBLE,
  INDEX `fk_UserInteractions_Interaction1_idx` (`interactions_id` ASC) VISIBLE,
  CONSTRAINT `fk_Movie_has_User_Movie3`
    FOREIGN KEY (`Movie_movie_id`)
    REFERENCES `MovieRecSystem`.`Movie` (`movie_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Movie_has_User_User3`
    FOREIGN KEY (`User_user_id`)
    REFERENCES `MovieRecSystem`.`User` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_UserInteractions_Interaction1`
    FOREIGN KEY (`interactions_id`)
    REFERENCES `MovieRecSystem`.`Interaction` (`interactions_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MovieRecSystem`.`UserPreferredGenres`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MovieRecSystem`.`UserPreferredGenres` ;

CREATE TABLE IF NOT EXISTS `MovieRecSystem`.`UserPreferredGenres` (
  `Genre_genre_id` BIGINT NOT NULL,
  `User_user_id` BIGINT NOT NULL,
  PRIMARY KEY (`Genre_genre_id`, `User_user_id`),
  INDEX `fk_Genre_has_User_User1_idx` (`User_user_id` ASC) VISIBLE,
  INDEX `fk_Genre_has_User_Genre1_idx` (`Genre_genre_id` ASC) VISIBLE,
  CONSTRAINT `fk_Genre_has_User_Genre1`
    FOREIGN KEY (`Genre_genre_id`)
    REFERENCES `MovieRecSystem`.`Genre` (`genre_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Genre_has_User_User1`
    FOREIGN KEY (`User_user_id`)
    REFERENCES `MovieRecSystem`.`User` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
